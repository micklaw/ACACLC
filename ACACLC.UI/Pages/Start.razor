@page "/start"

@using ACACLC.Application.UseCases;
@using System.Globalization

@inject CalculateQuote calculateQuote

<h1>Start a quote</h1>

<EditForm Model="Inputs" OnValidSubmit="Submitted">
    <div class="container">
        <div class="row">
            <div class="form-group">
                <FluentValidationValidator />
                <ValidationSummary />
            </div>
        </div>
    </div>
    <div class="container">
        <div class="row">
            <div class="col-md-12 col-lg-4">
                <div class="form-group">
                    <label>Customer Name</label>
                    <input @bind="@Inputs.CustomerName" class="form-control" placeholder="e.g Michael Law" />
                </div>
                <div class="form-group">
                    <label>Delivery date (£)</label>
                    <InputDate @bind-Value="@Inputs.DeliveryDate" class="form-control" placeholder="e.g dd/MM/yyyy"></InputDate>
                </div>
                <div class="form-group">
                    <label>Over how many years?</label>
                    <InputSelect @bind-Value="@Inputs.NumberOfYearsStr" class="form-control">
                        <option>--- Select a duration ---</option>
                        @foreach (var years in Inputs.AvailableDurations)
                        {
                            <option value="@years">@years</option>
                        }
                    </InputSelect>
                </div>
            </div>
            <div class="col-md-12  col-lg-4">
                <div class="form-group">
                    <label>Vehicle Price (£)</label>
                    <InputNumber @bind-Value="@Inputs.VehiclePrice" class="form-control" placeholder="e.g 10000"></InputNumber>
                </div>
                <div class="form-group">
                    <label>Deposit (£) </label>
                    <InputNumber @bind-Value="@Inputs.Deposit" class="form-control" placeholder="e.g 2000"></InputNumber>
                    <small><i><strong>Minimum @Inputs.MinimumDepositDisplay%</strong></i></small>
                </div>
            </div>
            <div class="col-md-12  col-lg-4">
                <div class="form-group">
                    <label>Arrangement Fee (£)</label>
                    <InputNumber @bind-Value="@Inputs.ArrangementFee" class="form-control" placeholder="e.g 88"></InputNumber>
                </div>
                <div class="form-group">
                    <label>Settlement Fee (£)</label>
                    <InputNumber @bind-Value="@Inputs.SettlementFee" class="form-control" placeholder="e.g 22"></InputNumber>
                </div>
            </div>
        </div>
        <div class="container">
            <div class="row">
                <div class="form-group">
                    <button class="btn btn-primary">Calculate</button>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@if (Quote != null)
{
    <h2>Payments</h2>

    <div class="container">
        <div class="row">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>Amount (£)</th>
                        <th>Fee</th>
                        <th>Fees amount (£)</th>
                        <th>Total (£)</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var payment in Quote.Payments)
                    {
                        <tr>
                            <td>@payment.PaymentDay.ToString("dddd, dd MMMM yyyy")</td>
                            <td>@payment.Amount.ToString()</td>
                            <td>@payment.FeeType</td>
                            <td>@payment.FeeAmount?.ToString()</td>
                            <td>@payment.Total.ToString()</td>
                        </tr>
                    }
                    <tr>
                        <td>Total payable</td>
                        <td colspan="3"></td>
                        <td>@Quote.Payments.Sum(i => i.Total).ToString()</td>
                    </tr>
                </tbody>
            </table>
        </div>
        <br />

        <div class="container">
            <div class="row">
                <div class="form-group">
                    <button class="btn btn-primary" onclick="@(() => Save())">Book it</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    QuoteInputs Inputs = new QuoteInputs();
    Quote Quote = null;

    void Submitted()
    {
        Quote = calculateQuote.Calculate(Inputs);
    }

    void Save()
    {
        Quote.Complete();
        calculateQuote.Save(Quote);
        Quote = null;
        Inputs = new QuoteInputs();
    }
}